# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
PATH=/bin:/usr/bin:/usr/local/bin

# testing
#*	*	*	*	*	echo `date` >>/var/log/rmg/cron.log

# Fetch det files from all sites
*/2	*	*	*	*	rmg fetch all >>/var/log/rmg/rmg_fetch.log 2>&1

# Process all det files into est file
*	*	*	*	*	rmg_det_to_est >>/var/log/rmg/rmg_det_to_est.log 2>&1

# Read processed est files into the database
*/2	*	*	*	*	rmg_readest /rmg_server/sitelist.csv /rmg_server/authfile_readest >>/var/log/rmg/rmg_readest.log 2>&1

# Turn on all sites at 1900
#56	18	*	*	*	rmg on all >>/var/log/rmg/rmg_schedule.log 2>&1
#58	18	*	*	*	rmg up all >>/var/log/rmg/rmg_schedule.log 2>&1
#59	18	*	*	*	rmg start all >>/var/log/rmg/rmg_schedule.log 2>&1
#
# Turn off all sites at 0730, just in case rmg_schedule didn't work
#30	07	*	*	*	rmg stop all >>/var/log/rmg/rmg_schedule.log 2>&1
#32	07	*	*	*	rmg down all >>/var/log/rmg/rmg_schedule.log 2>&1
#42	07	*	*	*	rmg off all >>/var/log/rmg/rmg_schedule.log 2>&1

# Collect site status information, turn sites on and off according to schedule, make plots for the web page
*/5	*	*	*	*	rmg_status >>/var/log/rmg/rmg_status.log 2>&1

