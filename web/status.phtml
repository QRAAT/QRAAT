<html>
<head>
<title>QRAAT Status</title>
<meta http-equiv=\"refresh\" content=\"60\">
<meta http-equiv="cache-control" content="no-cache">
<style type="text/css">
table.status {
	font-family: verdana,arial,sans-serif;
	font-size:11px;
	color:#333333;
	border-width: 1px;
	border-color: #666666;
	border-collapse: collapse;
}
table.status th {
	text-align:center;
	border-width: 1px;
	padding: 6px;
	border-style: solid;
	border-color: #666666;
	background-color: #dedede;
}
table.status td {
	text-align:center;
	border-width: 1px;
	padding: 6px;
	border-style: solid;
	border-color: #666666;
}
td.ok { background-color: #ffffff; }
td.nok { background-color: #ffaaaa; }
</style>
</head>
<body>

<h1>System Status</h1>
<?php
	// Show system datetime and clock synchronization status, using ntpq
	$ntpq_offset = "" ;
	$ntpq_result = `ntpq -p` ;
	$lines = preg_split("/\n/",$ntpq_result) ;
	foreach( $lines as $line )
	{
		if( strlen($line) > 50 )
		{
			if( substr($line,0,1) == "*" )
			{
				$args = preg_split("/\s+/",$line) ;
				if( count($args) > 9 )
				{
					$ntpq_offset = $args[8] ;
				}
			}
		}
	}
	$sync_status = "not synchronized" ;
	if( ($ntpq_offset != "") && ($ntpq_offset > -1000) && ($ntpq_offset < 1000) )
	{
		$sync_status = "synchronized" ;
	}
	print "<p>RMG Server date and time: ".date("g:i:s a T, l M d, Y").".&nbsp;" ;
	print "Server time is $sync_status, offset is $ntpq_offset ms.</p>" ;
?>

<h2>System Monitoring Plots</h2>
<p><a href="telemetry.html">Site telemetry</a>&nbsp;&nbsp;<a href="processing.html">Processing</a>&nbsp;&nbsp;<a href="frequency.html">Frequency</a>&nbsp;&nbsp;<a href="power.html">Power</a>&nbsp;&nbsp;<a href="showfest.php">Activity</a></p>

<h2>RMG Server Disk Space</h2>
<table class="status">
<tr><th>Path</th><th>% space used</th><th>% inodes used</th><th>space free</th></tr>
<?php
	// Show disk usage: percentage space used, percentage inodes used, free space in GB or MB
	function disk_report($name)
	{
		$name_class = "nok" ;
		$disk_used_percent = "N/A" ;
		$disk_used_class = "nok"  ;
		$inodes_used_percent = "N/A" ;
		$inodes_used_class = "nok"  ;
		$disk_free_human = "N/A" ;
		$disk_free_class = "nok"  ;
		$disk_free = disk_free_space($name) ;
		if( $disk_free )
		{
			$name_class = "ok" ;
			$disk_total = disk_total_space($name) ;
			$disk_used = $disk_total-$disk_free ;
			$disk_free_gig = intval($disk_free/1073741824) ;
			$disk_free_meg = intval($disk_free/1048576) ;
			$disk_free_human = $disk_free_gig." GB" ;
			if( $disk_free_gig == 0 )
			{
				$disk_free_human = $disk_free_meg." MB" ;
			}
			if( $disk_total > 0 )
			{
				$disk_used_percent = intval(100*$disk_used/$disk_total) ;
			}
			else
			{
				$disk_used_percent = 0 ;
			}
			$dfi_result = `df -i $name` ;
			$lines = preg_split("/\R/",$dfi_result) ;
			$inodes_used_percent = 0 ;
			if( count($lines) > 1 )
			{
				$args = preg_split("/\s+/",$lines[1]) ;
				if( count($args) > 5 )
				{
					$inodes_used_percent = intval($args[4]) ;
				}
			}
			$disk_used_class = "ok"  ;
			if( $disk_used_percent >= 80 )
			{
				$disk_used_class = "nok"  ;
			}
			$inodes_used_class = "ok"  ;
			if( $inodes_used_percent >= 80 )
			{
				$inodes_used_class = "nok"  ;
			}
			$disk_free_class = "ok"  ;
			if( $disk_free_gig < 5 )
			{
				$disk_free_class = "nok"  ;
			}
		}
		print "<tr>" ;
		print "<td class=\"$name_class\">$name</td>" ;
		print "<td class=\"$disk_used_class\">$disk_used_percent</td>" ;
		print "<td class=\"$inodes_used_class\">$inodes_used_percent</td>" ;
		print "<td class=\"$disk_free_class\">$disk_free_human</td>" ;
		print "</tr>\n" ;
	}

	function report_all_disks()
	{
		disk_report("/") ;
		disk_report("/rmg_server") ;
		disk_report("/mnt/external") ;
		disk_report("/mnt/external2") ;
	}

	report_all_disks() ;
?>
</table>

<?php
	// Show sitelist.csv and tx.csv files
	//date_default_timezone_set("UTC") ;
	include("qr_variables.php") ;	// sets system path and configuration variables

	function read_csv($filename)
	{
		$data = array() ;
		if( file_exists($filename) )
		{
			$timestamp = filemtime($filename) ;
			//$datetime = date("Y M d l H:i:s T",$timestamp) ;
			$datetime = date("g:i:s a T, l M d, Y",$timestamp) ;
			$metadata = array( $filename, $datetime ) ;
			$data[] = $metadata ;
			$fh=fopen($filename,"r") ;
			if( $fh )
			{
				while( $line = fgets($fh) )
				{
					$argv = explode(",",$line) ;
					$argc = count($argv) ;
					if( $argc > 1 )
					{
						$data[] = $argv ;
					}
				}
				fclose($fh) ;
			}
		}
		return $data ;
	}

	function show_data($data,$title)
	{
		print "<h2>$title</h2>\n" ;
		if( count($data) )
		{
			$metadata = array_shift($data) ;
			$filename = $metadata[0] ;
			$filemtime = $metadata[1] ;
			print "<p>$filename last modified $filemtime</p>\n" ;
			if( count($data) )
			{
				print "<table class=\"status\">" ;
				$header = array_shift($data) ;
				print "<tr>" ;
				foreach( $header as $cell )
				{
					print "<th>" ;
					print htmlspecialchars($cell) ;
					print "</th>" ;
				}
				print "</tr>" ;
				foreach( $data as $row )
				{
					print "<tr>" ;
					foreach( $row as $cell )
					{
						print "<td>" ;
						print htmlspecialchars($cell) ;
						print "</td>" ;
					}
					print "</tr>" ;
				}
				print "</table>" ;
			}
		}
		else
		{
			print "<p>No data</p>\n" ;
		}
	}

	function fixup_timestamp(&$data)
	{
		foreach( $data as &$row )
		{
			$timestamp = intval($row[0]) ;
			if( $timestamp > 0 )
			{
				$datetime = date("Y M d l H:i:s T",$timestamp) ;
				$row[0] = $datetime ;
			}
		}
	}

	function qr_status()
	{
		global $path_to_tx_csv ;
		global $path_to_sitelist_csv ;
		global $path_to_status_log ;
		$data = read_csv($path_to_sitelist_csv) ;
		show_data($data,"Site configuration file") ;
		$data = read_csv($path_to_tx_csv) ;
		show_data($data,"Transmitter configuration file") ;
		//$data = read_csv($path_to_status_log) ;
		//fixup_timestamp($data) ;
		//show_data($data,"Status log file") ;
	}

	qr_status() ;
?>
</body>
</html>
