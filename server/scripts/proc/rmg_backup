#!/bin/bash
#rmg_backup
#
# This script is part of the QRAAT system.
#
# Copyright (C) 2013 Marcel Losekoot
#
# This script is responsible for copying qraat data to an external backup disk
# Call this script from cron:
#	59 12 * * * rmg_backup
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Check for attempted reentry
name=`basename $0`
count=`pgrep -c $name`
if [ "$count" -gt "1" ]
then
	echo $name already running, bye!
	exit 1
fi

echo
echo Starting $0 at `date`
# Set RMG environment variables
source rmg_env

# Check environment variables (yes, necessary, trust me)
echo Checking environment variables are set
if [ -z "$RMG_BACKUP_DRIVE" ]
then
	echo ERROR: environment variable RMG_BACKUP_DRIVE is not set, bailing out
	exit 1
fi

# Check destination directories
echo Checking for backup drive: $RMG_BACKUP_DRIVE
if [ ! -e $RMG_BACKUP_DRIVE ]
then
	echo ERROR: backup drive $RMG_BACKUP_DRIVE not found
	exit 1
fi
echo Checking for backup directory: $RMG_BACKUP_DIR
if [ ! -e $RMG_BACKUP_DIR ]
then
	echo WARNING: creating backup directory $RMG_BACKUP_DIR
	mkdir -p $RMG_BACKUP_DIR	# create all necessary subdirectories
	if [ ! -e $RMG_BACKUP_DIR ]
	then
		echo ERROR: cannot create backup directory $RMG_BACKUP_DIR
		exit 1
	fi
fi
echo Checking for backup archive directory: $RMG_BACKUP_ARCHIVE_DIR
if [ ! -e $RMG_BACKUP_ARCHIVE_DIR ]
then
	echo WARNING: creating backup archive directory $RMG_BACKUP_ARCHIVE_DIR
	mkdir $RMG_BACKUP_ARCHIVE_DIR
	if [ ! -e $RMG_BACKUP_ARCHIVE_DIR ]
	then
		echo ERROR: cannot create backup archive directory $RMG_BACKUP_ARCHIVE_DIR
		exit 1
	fi
fi

# Backup $RMG_SERVER_ARCHIVE_DIR to $RMG_BACKUP_ARCHIVE_DIR
BACKUP_ARCHIVE_FILELIST=/var/log/rmg/rmg_backup_archive_synclog
echo Copying files from $RMG_SERVER_ARCHIVE_DIR to $RMG_BACKUP_ARCHIVE_DIR
rm -f $BACKUP_ARCHIVE_FILELIST
rsync -av --out-format='%n' $RMG_SERVER_ARCHIVE_DIR/  $RMG_BACKUP_ARCHIVE_DIR >$BACKUP_ARCHIVE_FILELIST
# MUST have trailing / on the rsync source directory, to avoid spurious destination subdirectory
if [ $? -ne 0 ]
then
	echo Error in rsync, bailing out
fi
echo Backup of archive directory completed
if [[ -e $BACKUP_ARCHIVE_FILELIST ]]
then
	scancount=`cat $BACKUP_ARCHIVE_FILELIST | grep '/' | wc -l`			# count lines containing a / anywhere
	copycount=`cat $BACKUP_ARCHIVE_FILELIST | grep '/' | grep -v '/$' | wc -l`	# as above, then exclude lines ending in /
	echo Scanned $scancount files and directories, copied $copycount files
else
	echo Backup failed, no log file.
fi

# Copy log files
#TODO

echo Checking for backup database directory: $RMG_BACKUP_DIR/database
if [ ! -e $RMG_BACKUP_DIR/database ]
then
	echo WARNING: creating backup directory $RMG_BACKUP_DIR/database
	mkdir $RMG_BACKUP_DIR/database
	if [ ! -e $RMG_BACKUP_DIR/database ]
	then
		echo ERROR: cannot create backup directory $RMG_BACKUP_DIR/database
		exit 1
	fi
fi

# Extract tables from the qraat database to $RMG_BACKUP_DIR/database
echo Dumping database tables
rmg_dbarchive $RMG_BACKUP_DIR/database
rmg_dbarchive Archive_Log $RMG_BACKUP_DIR/database

# Check for secondary backup
if [ -z "$RMG_BACKUP_DRIVE2" ]
then
	echo RMG_BACKUP_DRIVE2 is not set, skipping secondary backup
else
	# Synchronize second backup drive
	# Check destination directories
	echo Checking for backup drive: $RMG_BACKUP_DRIVE2
	if [ ! -e $RMG_BACKUP_DRIVE2 ]
	then
		echo ERROR: backup drive $RMG_BACKUP_DRIVE2 not found
		exit 1
	fi
	echo Checking for backup directory: $RMG_BACKUP_DIR2
	if [ ! -e $RMG_BACKUP_DIR2 ]
	then
		echo WARNING: creating backup directory $RMG_BACKUP_DIR2
		mkdir -p $RMG_BACKUP_DIR2	# create all necessary subdirectories
		if [ ! -e $RMG_BACKUP_DIR2 ]
		then
			echo ERROR: cannot create backup directory $RMG_BACKUP_DIR2
			exit 1
		fi
	fi
	echo Synchronizing $RMG_BACKUP_DRIVE and $RMG_BACKUP_DRIVE2
	BACKUP_DRIVE_SYNCLOG=/var/log/rmg/rmg_backup_drive_synclog
	rsync -av $RMG_BACKUP_DIR/ $RMG_BACKUP_DIR2 >$BACKUP_DRIVE_SYNCLOG
	if [ $? -ne 0 ]
	then
		echo Error in rsync, bailing out
	fi
	df -l $RMG_BACKUP_DRIVE $RMG_BACKUP_DRIVE2
fi

echo Finished $0 at `date`

#END
