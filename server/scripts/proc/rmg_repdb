#!/bin/bash

echo
echo Start `date`
start_epoc=`date "+%s"`

# Check for attempted reentry
name=`basename $0`
count=`pgrep -c $name`
if [ "$count" -gt "1" ]
then
	echo
	echo $name already running, bye!
	echo
	exit 1
fi

echo PATH=$PATH
source rmg_env
echo RMG_SERVER_DB_AUTH=$RMG_SERVER_DB_AUTH
# Check if we have RMG environment variables
if [ "$RMG_SERVER_DB_AUTH" == "" ]
then
	echo
	echo Environment variable RMG_SERVER_DB_AUTH not defined in rmg_env.
	echo
	RMG_SERVER_DB_AUTH="/rmg_server/db_auth"
fi

redirect=1
if [ $redirect -eq 1 ]
then
	# Setup port forwarding to RMG server at the field station, runs as a background process
	ssh -N -L 13306:localhost:3306 replicator@rmgs &
	err=$?
	pid=$!
	if [ "$err" -ne 0 ]
	then
		echo Error starting port forward: $err
		exit 1
	fi
	if [ "$pid" == "" ]
	then
		echo Missing port forward pid
		exit 1
	fi
	echo Started port forwarder, pid $pid
	sleep 5 # give ssh a chance to setup its connection
fi

# Rep away
#rmg_rep_table all
rmg_reptable position
rmg_reptable track_pos
rmg_reptable covariance
rmg_reptable telemetry
rmg_reptable detcount
rmg_reptable estcount
rmg_reptable procount
rmg_reptable processing_statistics
rmg_reptable deployment
#rmg_reptable est

# Shutdown port forwarding
if [ $redirect -eq 1 ]
then
	# Kill background ssh port forwarder
	if [ -n $pid ]
	then
		echo Stopping port forwarder, pid $pid
		kill $pid
	fi
fi

finish_epoc=`date "+%s"`
seconds=0
if [ -n "$start_epoc" ] && [ -n "$finish_epoc" ]
then
	let seconds=$finish_epoc-$start_epoc
	if [ $seconds -lt 0 ] ; then seconds=0 ; fi
fi
echo Took $seconds seconds
let minutes=$seconds/60
if [ $minutes -ne 0 ]
then
	let seconds=$seconds-$minutes*60
	echo That\'s $minutes minutes and $seconds seconds
fi
echo Finish `date`
echo

#END
