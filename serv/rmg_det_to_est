#!/bin/bash
#rmg_det_to_est
#
# This script is part of the QRAAT system.
#
# Copyright (C) 2013 Todd Borrowman
#
# This script converts det files to est files and moves the det files
# to the det archive.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Check for attempted reentry
name=$(basename $0)
count=$(pgrep -c $name)
if [ "$count" -gt "1" ]
then
	echo $name already running, bye!
	exit 1
fi
#
echo Starting `date`

source rmg_env

SITES=$(find $RMG_SERVER_DET_DIR -maxdepth 1 -mindepth 1 -type d)

#for loop in {1..10}
#do
	for SITE in $SITES
	do
		site_dir=$RMG_SERVER_DET_DIR/$SITE/
		leaf_dirs=$(find $site_dir????/??/??/??/?? -type d | sort -r | head -21)	# want newest 20 that aren't being written by fetch
		leaf_dirs=$(echo $leaf_dirs | cut -d' ' -f2-) #remove first entry (this is a stupid way to do this)
		for leaf_dir in $leaf_dirs
		do
			subdirectory=${leaf_dir#$site_dir}
			est_dir=$RMG_SERVER_EST_DIR/$SITE/$subdirectory
			archive_dir=$RMG_SERVER_DET_ARCHIVE/$SITE/$subdirectory		# use this for moving files
			archive_parent=`dirname $archive_dir`				# use this for moving the whole directory
			mkdir -p $est_dir
			touch $est_dir/.busy	# mark it to avoid predation of est files
			est_processing $leaf_dir $est_dir
			rm -f $est_dir/.busy

			mkdir -p $archive_dir
			tarname=$archive_dir/$SITE.${subdirectory//"/"/"."}.tar
			if [ -e $tarname ]
			then
				tar -rf $tarname -C $leaf_dir .
			else
				tar -cf $tarname -C $leaf_dir .
			fi
			rm -r $leaf_dir
#			mkdir -p $archive_parent
#			echo mv $leaf_dir $archive_parent
#			if ! mv $leaf_dir $archive_parent
#			then
#				echo directory move failed, moving files
#				find $leaf_dir -type f -exec mv -f {} $archive_dir \;
#			fi
		done
		find $site_dir -depth -empty -delete
	done
#done
echo Finished `date`
#END
