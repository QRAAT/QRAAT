#!/bin/bash
# rmg-probe
# This script is part of the QRAAT system.
#
# Copyright (C) 2013 Christopher Patton
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source rmg_env  # setup RMG environment variables

function help() {
  cat <<!EOF!
usage: rmg-node state/help [-options]

  This program is part of the QRAAT system. It controls the field site 
  by transitioning the computer to the specified state.  

  'state' is any one of the following:

    active       Computer is powered, RMG receiver is on, and the pulse 
                 detector is running. 

    up           Computer is powered, but RMG receiver is off and the 
                 pulse detector is stopped. 

    down [-d M]  RMG receiver is off, the pulse detector is stopped, and 
                 there is a timer set to shutdown. If such a timer exists,
                 its delay is reset to M minutes; otherwise an M-minute 
                 timer is created. M is 5 minutes by default. 

  'help' prints this help. 
!EOF!
}


## Configuration and status of sites ##
if [ $? -ne 0 ]; 
then
  echo "error: site configuration information not available (no sitelist.csv)." 1>&2
  exit 1
fi 


## Get task and options ##
TASK=$1 

if [ ! $TASK ]
then
  help
  exit 0
fi

case $TASK in
 -h|--help|help)
   help
   exit 0
  ;; 
  
  active)
    
    # TODO

  ;; 

  up)
  
    # TODO

  ;; 

  down)
    shift
    if [[ "$1" == "-d" ]] || [[ "$1" == "--delay" ]] 
    then
      DELAY=$2
    else     
      DELAY=5
    fi

    echo $DELAY
    # TODO

  ;;
  
  *)
    echo error: unrecognized state \'$TASK\'
    exit 1
  ;;

esac 

