#!/usr/bin/python
# rmg_sitelist
# Input a CSV formatted site list on STDIN, return an entry or 
# modify the file and output to STDOUT. This script is part of the 
# QRAAT system. 
#
# Copyright (C) 2013 Christopher Patton
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import sys

usage = """\
usage: rmg_sitelist <site> <parameter> [<value>] 
               -c,--column <parameter> [<value>] 
               -r,--row <site> 
 < path/to/original.csv [> path/to/new.csv]

  If a value is specified, then a .csv file is emitted to 
  standard output; otherwise the requested parameter's value
  is emitted.""" 

    ## Parse command line parameters ##

if len(sys.argv) == 2 and sys.argv[1] in ['-h', '--help']:
  print >> sys.stderr, usage
  sys.exit(0)

elif len(sys.argv) < 3 or len(sys.argv) > 4:
  print >> sys.stderr, "error (sitelist): wrong number of arguments arguments." 
  print >> sys.stderr, usage
  sys.exit(1)

elif sys.argv[1][0] == '-':

  if sys.argv[1] in ['-c', '--column']: 
    # Operate on column. Either emit column values or set them all to 'value'. 
    sys.argv.append(None)
    (row, col, value) = (None, sys.argv[2], sys.argv[3]) 

  elif sys.argv[1] in ['-r', '--row']: 
    # Operate on row. Emit first row whose name matches 'row'. Can't mutate. 
    (row, col, value) = (sys.argv[2], None, None)

  else:
    print >> sys.stderr, "error (sitelist): unknown option '%s'." % sys.argv[1][1:]
    print >> sys.stderr, usage
    sys.exit(1)

else: 
  # Operate on cell. Either emit first match or set to 'value'.
  sys.argv.append(None)
  (row, col, value) = sys.argv[1:4]


    ## Read header ##

headers = sys.stdin.readline().strip().split(',')
header = { headers[i] : i for i in range(len(headers)) }


    ## Parse line by line ##

if value:
  print ','.join(headers)

for line in sys.stdin.readlines(): 
  line = line.strip().split(',')
  try: 

    if not row and col: # Column
      if not value:
        if len(line[header[col]]) == 0: 
          print "(nil)"
        else:
          print line[header[col]]
        
      elif value: 
        line[header[col]] = value
        print ','.join(line)

    elif row and not col: # Row
      i = header["name"]
      if line[i] == row: 
        print ','.join(line[:i] + line[i+1:])
        sys.exit(0)
    
    else: # Cell
      if not value and line[header["name"]] == row: # Just get value
        if len(line[header[col]]) == 0: 
          print "(nil)"
        else:
          print line[header[col]]
        sys.exit(0)
      elif value: 
        if line[header["name"]] == row:
          line[header[col]] = value
        print ','.join(line)

  except IndexError: 
    pass

  except KeyError: 
    print >> sys.stderr, "error (rowlist): no such parameter '%s'." % col
    sys.exit(1)


if row and not value:
  print >> sys.stderr, "error (rowlist): '%s' doesn't appear in sitelist." % row
  sys.exit(1)
else:
  sys.exit(0)
