This package is comprised of software for the Quail Ridge Automated Animal Tracking
(QRAAT) project. It remains under major development, but is distributed nonetheless 
under the terms of the GNU General Public License, in the hopes that it will 
be useful. 


Tools
-----
 
 build-gnuradio
Download, build, and install the software defined radio pipeline. This is not our 
work, but is distributed freely as part of GNU Radio for simplifying the build 
process. We distribute it as well for convenience. 

 build-rmg
Our in-house installation script for our own GR module. The RMG module (as we have
been calling it) is a signal processing block that works in the GNU Radio framework. 
After building and installing, the following programs are made available from the 
command line: 

  4channel_spectrum 
  4channel_spectrum_{serv,client}
  tx_setup
  run_rmg
  read_det
  active_rmg

For usage instructions, refer to the documentation. 

 rmg
This program provides basic controls for managing nodes in a small QRAAT 
deployment. RMG Remote is defined as the field computer which runs the software 
defined radio portion of QRAAT. Typically there are many RMG remotes running 
simultaneously. RMG Server is the central computer where all raw data is 
collected and processed. This program makes heavy use of SSH and for that 
reason makes use of an RSA key with no passphrase. Set up instructions below. 


Installation
------------
A more lengthy and useful set of instructions is available in our documentation. 
However, these simple instructions should suffice if you know what you're doing. 

$ ./build-gnuradio
Will take about an hour for a full download/build/install. After, it will print out
a number of post-installation instructions; you should follow these. 

$ ./build-rmg install
Install the RMG module and associated programs.  

Setting up RSA encryption for rmg script
----------------------------------------

 On RMG Server:

$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/christopher/.ssh/id_rsa): [type "rmg_rsa"]
Enter passphrase (empty for no passphrase): [press enter]
Enter same passphrase again: [press enter]
   ... some output ... 

$ mv rmg_rsa ~/.ssh/rmg_rsa
$ scp rmg_rsa.pub rmg@siteN:rmg_rsa.pub
$ ssh rmg@siteN

 On RMG Remte: 

$ mkdir -p .ssh && mv rmg_rsa.pub .ssh
$ cat .ssh/rmg_rsa.pub >> .ssh/authorized_keys

 Test setup (on RMG Server): 
$ ssh -i .ssh/rmg_rsa rmg@siteN
$ ./rmg fetch siteN
